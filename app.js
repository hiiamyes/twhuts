// Generated by CoffeeScript 1.9.2
(function() {
  var MongoClient, app, async, crawler, express, mongoServerUrl, port;

  express = require('express');

  async = require('async');

  app = express();

  app.set('view engine', 'jade');

  app.set('views', __dirname + '/');

  app.use(express["static"](__dirname + '/'));

  MongoClient = require('mongodb').MongoClient;

  mongoServerUrl = 'mongodb://yes:yes@ds035280.mongolab.com:35280/hiking';

  crawler = require('./hut_crawler/scripts/crawler.js');

  crawler.crawl(MongoClient, mongoServerUrl);

  app.get('/', function(req, res) {
    return res.render('index');
  });

  app.get('/hut_crawler/views/:name', function(req, res) {
    return res.render('hiking/views/' + req.params.name);
  });

  app.get('/hut_crawler', function(req, res) {
    return res.render('hiking/views/index');
  });

  app.get('/comic', function(req, res) {
    return res.render('comic/views/index');
  });

  app.get('/api/hut', function(req, res) {
    return MongoClient.connect(mongoServerUrl, function(err, db) {
      return async.parallel({
        hutGroups: function(cb) {
          return db.collection('huts').aggregate([
            {
              $sort: {
                nameZh: 1
              }
            }, {
              $group: {
                _id: {
                  admin: '$admin'
                },
                hutNameZhs: {
                  $push: '$nameZh'
                }
              }
            }
          ], function(err, result) {
            return cb(null, result);
          });
        },
        huts: function(cb) {
          return db.collection('huts').find().toArray(function(err, docs) {
            return cb(null, docs);
          });
        }
      }, function(err, results) {
        return res.status(200).send({
          'hutGroups': results.hutGroups,
          'huts': results.huts
        });
      });
    });
  });

  port = Number(process.env.PORT || 8080);

  app.listen(port, function() {
    return console.log('Listening on ' + port);
  });

}).call(this);
